<?xml version="1.0" encoding="UTF-8" ?>
<class name="ImageFrames" inherits="Resource" version="3.4">
	<brief_description>
		A container for [Image] frames.
	</brief_description>
	<description>
		A class used to load and arrange a sequence of image frames. Allows to load animated image formats externally (only GIF is supported currently). Each frame can specify a delay for animated images. The data can then be used to generate an [AnimatedTexture] or a [SpriteFrames] via script.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="add_frame">
			<return type="void">
			</return>
			<argument index="0" name="image" type="Image">
			</argument>
			<argument index="1" name="delay" type="float">
			</argument>
			<argument index="2" name="idx" type="int" default="-1">
			</argument>
			<description>
				Adds a new frame.
			</description>
		</method>
		<method name="clear">
			<return type="void">
			</return>
			<description>
				Removes all frames.
			</description>
		</method>
		<method name="get_frame_count" qualifiers="const">
			<return type="int">
			</return>
			<description>
				Returns the total number of frames.
			</description>
		</method>
		<method name="get_frame_delay" qualifiers="const">
			<return type="float">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns the delay of frame [code]idx[/code].
			</description>
		</method>
		<method name="get_frame_image" qualifiers="const">
			<return type="Image">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns the [Image] of frame [code]idx[/code].
			</description>
		</method>
		<method name="load">
			<return type="int" enum="Error">
			</return>
			<argument index="0" name="path" type="String">
			</argument>
			<argument index="1" name="max_frames" type="int" default="0">
			</argument>
			<description>
				Loads the data from a file located at [code]path[/code]. Recognizes the following file extensions: [code]gif[/code]. The [code]max_frames[/code] parameter limits the number of frames which can be loaded.
			</description>
		</method>
		<method name="load_gif_from_buffer">
			<return type="int" enum="Error">
			</return>
			<argument index="0" name="data" type="PoolByteArray">
			</argument>
			<argument index="1" name="max_frames" type="int" default="0">
			</argument>
			<description>
				Loads the data from a [PoolByteArray] GIF buffer. The [code]max_frames[/code] parameter limits the number of frames which can be loaded.
			</description>
		</method>
		<method name="remove_frame">
			<return type="void">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Removes the frame [code]idx[/code].
			</description>
		</method>
		<method name="save_gif">
			<return type="int" enum="Error">
			</return>
			<argument index="0" name="filepath" type="String">
			</argument>
			<argument index="1" name="colors" type="int" default="256">
			</argument>
			<description>
				Saves a GIF file using frames added with [method add_frame]. If there are multiple images, creates an animated GIF, taking into account individual frame delays. If there's only one image, GIF is written as a static image.
				The [code]colors[/code] parameter specifies the number of colors in GIF color map. The number of colors are rounded to nearest power of 2, and the maximum number of colors is 256.
				Frames can have different sizes. Dimensions of the first frame is taken as the base canvas size.
				[b]Note:[/b] This method depends on [ImageIndexed] used to generate image palette required to write GIF files.
			</description>
		</method>
		<method name="set_frame_delay">
			<return type="void">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<argument index="1" name="delay" type="float">
			</argument>
			<description>
				Sets the delay in seconds of frame [code]idx[/code].
			</description>
		</method>
		<method name="set_frame_image">
			<return type="void">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<argument index="1" name="image" type="Image">
			</argument>
			<description>
				Sets the [Image] of frame [code]idx[/code].
			</description>
		</method>
	</methods>
	<constants>
	</constants>
</class>
